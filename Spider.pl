#!/usr/bin/perl
use warnings;
use strict;
use LWP::Simple;

my $source = shift || "Please provide an initial source URL"; # 주소 입력
my @keyword = split /\./, $source; # $source . 으로 분리
my $content = get($source); # $source 소스코드 얻어서 $content 저장
my (%url_done, @urls);
my $count;
$url_done{$source}=1; # $source 내용 중복 방지를 위해 해시에 등록
while($content =~ /<a (?:[^>]* )?href *= *\"([^\"]*)\"/ig) # $content 에 정규표현식에 해당하는 내용이 있을때까지 반복
{
	my $url = $1; # 주소내용을 $url에 저장
	$url =~ s/^/$source/ if $url =~ /^\//; # $url 앞에 도메인 없이 시작하면 문자열 앞에 도메인 병합
	next unless $url =~ /$keyword[1]/;	# $keyword[1]에 해당하는 내용이 없으면 next($keyword[1] = http://www.google.com -> google)
	push @urls, $url;	# $url을 @urls 배열에 삽입
}
for my $url (@urls) 
{
	next if $url_done{$url}; # $url이 해시에 존재하면 next
	$url_done{$url} = 1; # $url을 해시에 저장
	$content = get($url); # $url 소스코드를 $content에 저장
	while($content =~ /<a (?:[^>]* )?href *= *\"([^\"]*)\"/ig) # $content 에 정규표현식에 해당하는 내용이 있을때까지 반복
	{
		my $url = $1; # 주소내용을 $url에 저장
		$url =~ s/^/$source/ if $url =~ /^\//; # $url 앞에 도메인 없이 시작하면 문자열 앞에 도메인 병합
		next unless $url =~ /$keyword[1]/;	# $keyword[1]에 해당하는 내용이 없으면 next($keyword[1] = http://www.google.com -> google)
		next if $url_done{$url}; # 해시에 $url의 값이 존재하면 next
		$url_done{$url} = 1; # $url을 해시에 저장
		push @urls, $url; # $url을 @urls 배열에 삽입
	}
}
foreach my $url (sort keys %url_done) # %url_done 해시에 저장된 키를 보기 좋게 출력
{
	$count++;
	print "$count : $url\n";
}
